function addDailyLog {
    year=$(date +"%Y")
    month=$(date +"%m")
    today=$(date +"%d")
    log=$LOGPATH/log/$year/$month/$today

    if [ -e "$log/README.md" ];then
        return
    fi
    mkdir -p $log/images
    touch $log/README.md
    echo "[TOC]" >> $log/README.md
}
addDailyLog

function dailyLog {
    year=$(date +"%Y")
    month=$(date +"%m")
    today=$(date +"%d")
    log=log/$year/$month/$today
    echo $log
}

# log funcs
function fetchImage {
    year=$(date +"%Y")
    month=$(date +"%m")
    date=$(date +"%d")
    imagePath=$LOGPATH/log/$year/$month/$date/images

    if [ ! -d $imagePath ]
    then
        mkdir -p $imagePath 
    fi

    if [[ $1 == http* ]]; then
        curl $1 -Lo $imagePath/$2
    else
        if [[ -e $1 ]]; then
            cp $1 $imagePath/
        else
            cp $HOME/Downloads/$1 $imagePath/
        fi
    fi
}

function suggestFetchImage {
  local files
  files=($HOME/Downloads/*.(jpeg|png|jpg|gif)(N:t))
  compadd -U -f -a files 
}
compdef suggestFetchImage fetchImage

task-start() {
    addDailyLog 
    curTime=$(date +"%Y-%m-%d %H:%M:%S")
    logFile=${CODEPATH}/git/log/$(dailyLog)/README.md
    curTask=${CODEPATH}/git/log/task/cur
    echo >> $logFile
    echo "# $curTime" >> $logFile
    echo "## 任务" >> $logFile

    local joined_params=""


    array=("${*[@]:1}")
    for param in "$array"; do
      joined_params+="$param "
    done

    joined_params="${joined_params% }"

    echo "${joined_params// /|}" >> $logFile
    echo "## 内容" >> $logFile
    echo $joined_params > $curTask
}

task-info() {
    array=("${*[@]:1}")
    output=$($GOPATH/bin/task-info $array)
    echo $output | jq .
}


_tools-archive() {
    res=($(task-parser "${words[@]:1}"))
    compadd -a res
}
compdef _tools-archive task-archive
compdef _tools-archive task-add
compdef _tools-archive task-info
compdef _tools-archive task-start
# vim: set ft=bash :
