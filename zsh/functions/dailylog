function addDailyLog {
    year=$(date +"%Y")
    month=$(date +"%m")
    today=$(date +"%d")
    log=$LOGPATH/log/$year/$month/$today
    mkdir -p $log/images

    touch $log/README.md
    echo "[TOC]" >> $log/README.md
}
addDailyLog

function dailyLog {
    year=$(date +"%Y")
    month=$(date +"%m")
    today=$(date +"%d")
    log=log/$year/$month/$today
    echo $log
}

# log funcs
function fetchImage {
    year=$(date +"%Y")
    month=$(date +"%m")
    date=$(date +"%d")
    imagePath=$LOGPATH/log/$year/$month/$date/images

    if [ ! -d $imagePath ]
    then
        mkdir -p $imagePath 
    fi

    if [[ $1 == http* ]]; then
        curl $1 -Lo $imagePath/$2
    else
        if [[ -e $1 ]]; then
            cp $1 $imagePath/
        else
            cp $HOME/Downloads/$1 $imagePath/
        fi
    fi
}

function suggestFetchImage {
  local files
  files=($HOME/Downloads/*.(jpeg|png|jpg|gif)(N:t))
  compadd -U -f -a files 
}
compdef suggestFetchImage fetchImage

task-start() {
    addDailyLog 
    curTime=$(date +"%Y-%m-%d %H:%M:%S")
    logFile=${CODEPATH}/git/log/$(dailyLog)/README.md
    echo >> $logFile
    echo "# $curTime" >> $logFile
    echo "## 任务" >> $logFile

    local joined_params=""
    local IFS="|"  # 设置分隔符为|

    # 使用 "$*" 变量表示所有的输入参数
    for param in "$*"; do
      # 拼接参数
      joined_params+="|$param"
    done

    # 移除开头的分隔符
    joined_params="${joined_params:1}"


    echo "$joined_params" >> $logFile
    echo "## 内容" >> $logFile
}


_tools-archive() {
    res=($(task-parser "${words[@]:1}"))
    compadd -a res
}
compdef _tools-archive task-archive
compdef _tools-archive task-add
compdef _tools-archive task-read
compdef _tools-archive task-start
# vim: set ft=bash :
